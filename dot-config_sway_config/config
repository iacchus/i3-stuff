# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
#set $term foot
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | wmenu | xargs swaymsg exec --
# set $menu "rofi -show drun -show-icons"

set $launcher "albert toggle"
set $filemanager "pcmanfm"
set $webbrowser "firefox-nightly"
set $noteedditor "obsidian"
set $clipboardmanager "copyq toggle"
set $calculator "qalculate-gtk"

### Appearance
# window corner radius in px
# corner_radius 10
corner_radius 7

# Window background blur
# blur off
blur off
blur_xray off
blur_passes 1
blur_radius 2

# shadows off
shadows on
# shadows_on_csd off
shadows_on_csd on
shadow_blur_radius 20
shadow_color #0000007F

# inactive window fade amount. 0.0 = no dimming, 1.0 = fully dimmed
default_dim_inactive 0.4
# dim_inactive_colors.unfocused #000000FF
dim_inactive_colors.unfocused #00000066
dim_inactive_colors.urgent #900000FF

# Move minimized windows into Scratchpad (enable|disable)
scratchpad_minimize disable

# border pixel 1
default_border pixel 1
default_floating_border pixel 1

# https://www.reddit.com/r/swaywm/comments/1b72ve8/color_of_the_window_borders/
## Colours
set $base00 #282828
set $base01 #3c3836
# set $base02 #504945
set $base02 #00000099
set $base03 #665c54
set $base04 #d5c4a1
set $base05 #ebdbb2
set $base06 #fbf1c7
set $base07 #ebdbb2
set $base08 #cc241d
# set $base09 #d65d0e99
set $base09 #33333399
set $base0A #d7992199
set $base0B #98971a
set $base0C #458588
set $base0D #b16286
set $base0E #689d6a
set $base0F #a89984

## Window Colours
client.focused   $base0D  $base00  $base06  $base08  $base09
client.focused_inactive  $base02  $base00  $base06  $base08  $base02
client.unfocused   $base01  $base00  $base06  $base08  $base02
client.urgent   $base07  $base00  $base08  $base0B  $base02
client.placeholder       $base02  $base00  $base06  $base03  $base04
client.background        $base00
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# output * bg /home/iacchus/Wallpapers/forest.jpg fill
output * bg /home/iacchus/Wallpapers/forest.jpg center
# output * bg /home/iacchus/Wallpapers/forest_watermark.jpg center
# output * bg /home/iacchus/Wallpapers/forest_watermark.jpg stretch
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaymsg "output * power off"' resume 'swaymsg "output * power on"'
           # timeout 300 'swaylock -f -c 000000' \
         # timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         # before-sleep 'swaylock -f -c 000000'
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard {
  xkb_layout br,us
  xkb_options grp:rctrl_toggle;
}

input type:pointer {
  middle_emulation enabled
  accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
  pointer_accel 0.80 # set mouse sensitivity (between -1 and 1)
}

input type:touchpad {
  tap enabled
  natural_scroll enabled
  dwt enabled
}

### Key bindings
#
# Basics:
#
    #F-keys
    bindsym F1 exec $term
    bindsym F2 exec $webbrowser
    bindsym F3 exec $noteedditor
    bindsym F4 exec $filemanager
    bindsym F5 border toggle
    # bindsym F6 exec $clipboardmanager
    bindsym F6 exec copyq toggle
    # bindsym F10 exec swaymsg '[app_id=".*"]' focus
    # bindsym F10 [all] focus next
    # bindsym F10 for_window [app_id=".*"] focus
    # bindsym F10 for_window [all] focus
    # bindsym F7 exec "gammastep -O 2750"
    bindsym F7 exec "/home/iacchus/git-stuff/swaywm-stuff/program-toggle.py gammastep -O 2750"
    # bindsym F8 exec ""
    # bindsym F8 reload
    bindsym F9 exec "/home/iacchus/git-stuff/swaywm-stuff/swaywm-focus-prev-next.py prev"
    bindsym F10 exec "/home/iacchus/git-stuff/swaywm-stuff/swaywm-focus-prev-next.py next"
    # bindsym F11 workspace next
    # bindsym F12 workspace prev
    # bindsym F11 move container to workspace prev, workspace prev
    # bindsym F12 move container to workspace next, workspace next
    bindsym F11 exec "/home/iacchus/git-stuff/swaywm-stuff/move-window-prev-next-workspace.py prev"
    bindsym F12 exec "/home/iacchus/git-stuff/swaywm-stuff/move-window-prev-next-workspace.py next"

    # bindsym Print exec grim
    # bindsym Print exec "/home/iacchus/git-stuff/swaywm-stuff/sway-screenshot -m output"
    bindsym Insert exec "/home/iacchus/git-stuff/swaywm-stuff/sway-screenshot -m region"
    bindsym $mod+Insert exec "/home/iacchus/git-stuff/swaywm-stuff/sway-screenshot -m output"
    bindsym Control+Insert exec "/home/iacchus/git-stuff/swaywm-stuff/sway-screenshot -m output"
    bindsym $mod+Shift+Insert exec "/home/iacchus/git-stuff/swaywm-stuff/sway-screenshot -m window"
    # bindsym $mod+Print exec grim
    # bindsym Print exec $term grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | \"\(.x),\(.y) \(.width)x\(.height)\"' | slurp)"

    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioPause exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86AudioStop exec playerctl stop
    bindsym XF86Search exec $launcher

    # Start a terminal
    # bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    # bindsym $mod+d exec $menu
    bindsym $mod+d exec $launcher

    bindsym $mod+q exec $calculator

    # Start file manager
    # bindsym $mod+Shift+Return exec $filemanager

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_maximum_size -1 x -1
    floating_modifier $mod normal

    # focus_wrapping yes
    focus_wrapping workspace

    # Reload the configuration file
    bindsym $mod+Shift+c reload
    bindsym $mod+r reload

    # Reload Waybar configuration file
    bindsym $mod+z reload killall -SIGUSR2 waybar       

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    bindsym $mod+Tab mode swtchr; exec ~/.cargo/bin/swtchr
    bindsym $mod+Shift+Tab mode swtchr; exec ~/.cargo/bin/swtchr
    mode swtchr bindsym Backspace mode default

    bindsym $mod+a exec $launcher
    bindsym $mod+v exec $clipboardmanager

    bindsym KP_Home exec "/home/iacchus/git-stuff/swaywm-stuff/focus-prev-next-window.py prev"
    bindsym KP_Prior exec "/home/iacchus/git-stuff/swaywm-stuff/focus-prev-next-window.py next"
    # bindsym KP_Right workspace next
    bindsym KP_Right exec "/home/iacchus/git-stuff/swaywm-stuff/focus-prev-next-workspace.py next"
    bindsym KP_Begin exec "/home/iacchus/git-stuff/swaywm-stuff/focus-next-empty-workspace.py"
    # bindsym KP_Left workspace prev
    bindsym KP_Left exec "/home/iacchus/git-stuff/swaywm-stuff/focus-prev-next-workspace.py prev"
    # bindsym KP_Insert bar hidden_state toggle
    bindsym KP_Insert exec killall -SIGUSR1 waybar
    bindsym KP_Down sticky toggle
    bindsym KP_Delete kill
    bindsym KP_Enter exec $term

    # /usr/include/linux/input-event-codes.h
    # some codes
    #  1   KEY ESC
    # 15   KEY_TAB
    # 16   KEY_Q
    # 17   KEY_W
    # 20   KEY_T
    # 29   KEY_LEFTCTRL
    # 38   KEY_L
    # 42   KEY_LEFTSHIFT
    # 44   KEY_Z
    # 56   KEY_LEFTALT
    # 125  KEY_LEFTMETA
  
    bindsym --release Control_L [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 29:1 56:1 44:1 44:0 56:0 29:0
    bindsym --release Control_R [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 29:1 56:1 44:1 44:0 56:0 29:0
    bindsym --release ISO_Level3_Shift [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 29:1 38:1 38:0 29:0
    # bindsym --release Super_L exec albert toggle

    bindsym KP_Next [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 1:1 1:0 29:1 15:1 15:0 29:0
    bindsym KP_End [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 1:1 1:0 29:1 42:1 15:1 15:0 42:0 29:0
    # for_window [app_id="firefox-nightly" con_id=__focused__] bindgesture swipe:3:up exec ydotool key 1:1 1:0 29:1 20:1 20:0 29:0

    # bindgesture swipe:2:right workspace next
    # bindgesture swipe:2:left workspace prev

    bindgesture swipe:3:up [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 1:1 1:0 29:1 20:1 20:0 29:0
    bindgesture swipe:3:down [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 1:1 1:0 29:1 17:1 17:0 29:0
    bindgesture swipe:3:right [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 1:1 1:0 29:1 15:1 15:0 29:0
    bindgesture swipe:3:left [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 1:1 1:0 29:1 42:1 15:1 15:0 42:0 29:0

    bindgesture swipe:4:up exec alacritty
    bindgesture swipe:4:down kill
    bindgesture swipe:4:right workspace next
    bindgesture swipe:4:left workspace prev
    # bindgesture pinch:right workspace next
    # bindgesture pinch:left workspace prev
    # bindgesture pinch:outward+left workspace prev

    # bindgesture hold [app_id="firefox-nightly" con_id=__focused__] exec ydotool key 1:1 1:0 29:1 42:1 15:1 15:0 42:0 29:0
    # bindgesture hold exec alacritty
    # bindgesture -exact swipe:up+down exec alacritty
    # bindgesture swipe:up+down exec alacritty

    # bindgesture [app_id="firefox-nightly" con_id=__focused__] {
    #   swipe:up exec ydotool key 1:1 1:0 29:1 20:1 20:0 29:0
    #   swipe:down exec ydotool key 1:1 1:0 29:1 17:1 17:0 29:0
    #   swipe:right exec ydotool key 1:1 1:0 29:1 15:1 15:0 29:0
    #   swipe:left exec ydotool key 1:1 1:0 29:1 42:1 15:1 15:0 42:0 29:0
    # }


# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    # bindsym $mod+Shift+Left move left
    # bindsym $mod+Shift+Down move down
    # bindsym $mod+Shift+Up move up
    # bindsym $mod+Shift+Right move right
    bindsym $mod+Shift+Left move container to workspace prev, workspace prev
    bindsym $mod+Shift+Right move container to workspace next, workspace next
    bindsym $mod+KP_Left move container to workspace prev, workspace prev
    bindsym $mod+KP_Right move container to workspace next, workspace next
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1, workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2, workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3, workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4, workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5, workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6, workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7, workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8, workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9, workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10, workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    # bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    # bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
# bindsym $mod+r mode "resize"
bindsym $mod+Shift+r mode "resize"

for_window [app_id="Alacritty"] {
  floating enable
  resize set width 1093 px
  resize set height 614 px
}
for_window [app_id="albert"] floating enable
for_window [app_id="com.github.hluk.copyq"] floating enable
for_window [app_id="org.kde.neochat"] floating enable

for_window [app_id="org.pulseaudio.pavucontrol"] floating enable
# for_window [app_id="com.github.hluk.copyq"] floating enable, move scratchpad
for_window [class="Gimp"] floating enable
for_window [class="obsidian"] floating enable
for_window [app_id="opensnitch_ui"] floating enable

for_window [class="Pcmanfm"] floating enable
for_window [app_id="qalculate-gtk"] floating enable

for_window [app_id="firefox-nightly"] fullscreen enable
for_window [app_id="com.github.PintaProject.Pinta"] fullscreen enable

for_window [title="Espanso Sync Tool"] floating enable
assign [title="Espanso Sync Tool"] scratchpad

for_window [window_type="dialog"] floating enable, fullscreen disable
for_window [window_role="dialog"] floating enable, fullscreen disable
for_window [title="File Upload"] floating enable, fullscreen disable
for_window [title="Save Image"] floating enable, fullscreen disable
for_window [title="(?:Open|Save) (?:File|Folder|As|Image)"] floating enable, fullscreen disable
for_window [title="Enter name of file to save to…"] floating enable, fullscreen disable

for_window [shell="xwayland"] title_format "[XWayland] %title"

# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    id "waybar"
    swaybar_command waybar

    position top
    
    hidden_state hide
    mode hide

    modifier $mod

    gaps 3

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    # colors {
        # statusline #ffffff
        # background #323232
        # inactive_workspace #32323200 #32323200 #5c5c5c
        # inactive_workspace #323232dd #323232dd #5c5c5c
        # inactive_workspace #323232dd #323232dd #cccccc
    # }
}

exec opensnitch-ui
exec nm-applet
exec albert
exec_always copyq --start-server
exec espanso start
exec ydotoold

exec_always ~/.cargo/bin/swtchrd

# interception tools
# exec_always xcape -t 150 'Control_L=Control_L|Alt_L|z'
# exec xcape -t 150 -e 'Super_L=Super_L|R;Control_L=Control_L|F6;ISO_Level3_Shift=Control_L|L;Shift_R=Tab;Shift_L=Shift_R|Tab;Page_Down=Control_L|Tab;KP_End=Control_L|Shift_L|Tab;KP_Next=Control_L|Tab;'

include /etc/sway/config.d/*
